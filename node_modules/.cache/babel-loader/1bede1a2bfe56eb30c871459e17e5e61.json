{"ast":null,"code":"import cookie from 'js-cookie'; // set in cookie\n\nexport const setCookie = (key, value) => {\n  if (window !== 'undefined') {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n}; // remove from cookie\n\nexport const removeCookie = key => {\n  if (window !== 'undefined') {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // get from cookie such as stored token\n// will be useful when we need to make request to server with token\n\nexport const getCookie = key => {\n  if (window !== 'undefined') {\n    return cookie.get(key);\n  }\n}; // set in localstorage\n\nexport const setLocalStorage = (key, value) => {\n  if (window !== 'undefined') {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}; // remove from localstorage\n\nexport const removeLocalStorage = key => {\n  if (window !== 'undefined') {\n    localStorage.removeItem(key);\n  }\n}; // authenticate user by passing data to cookie and localstorage during signin\n\nexport const authenticate = (response, next) => {\n  console.log('AUTHENTICATE HELPER ON SIGNIN RESPONSE', response);\n  setCookie('token', response.data.token);\n  setLocalStorage('user', response.data.user);\n  next();\n}; // access user info from localstorage\n\nexport const isAuth = () => {\n  if (window !== 'undefined') {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};\nexport const signout = next => {\n  removeCookie('token');\n  removeLocalStorage('user');\n  next();\n};\nexport const checkValidEmail = email => {\n  // eslint-disable-next-line\n  const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n  return validEmailRegex.test(email);\n};\nexport const checkValidPassword = password => {\n  const validPassRegex = RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm);\n  return validPassRegex.test(password);\n};\nexport const validateSubscription = (email, password) => {\n  const msg = {\n    email_msg: '',\n    pass_msg: ''\n  };\n\n  if (email) {\n    if (!checkValidEmail(email)) {\n      msg.email_msg = 'INVALID_EMAIL';\n    }\n\n    if (!checkValidPassword(password)) {\n      msg.pass_msg = 'INVALID_PASSWORD';\n    }\n  } else {\n    msg.email_msg = 'EMAIL_MANDATORY';\n  }\n\n  if (msg.email_msg === '') {\n    if (email.substring(email.lastIndexOf('.')).length > 11) {\n      msg.email_msg = 'INVALID_EMAIL';\n    }\n  }\n\n  console.log(\"password msg\", msg);\n  return msg;\n}; //   export const validatePassword = (password) => {\n//     const msg = {\n//       pass_msg: '',\n//     };\n//     if (password) {\n//       if (!checkValidPassword(password)) {\n//         msg.pass_msg = 'INVALID_PASSWORD';\n//       } \n//     } else {\n//       msg.pass_msg = 'PASSSWORD_MANDATORY';\n//     }\n//     return msg;\n//   };","map":{"version":3,"sources":["/home/faisal/Desktop/mern-front/src/helpers/helpers.js"],"names":["cookie","setCookie","key","value","window","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","JSON","stringify","removeLocalStorage","removeItem","authenticate","response","next","console","log","data","token","user","isAuth","cookieChecked","getItem","parse","signout","checkValidEmail","email","validEmailRegex","RegExp","test","checkValidPassword","password","validPassRegex","validateSubscription","msg","email_msg","pass_msg","substring","lastIndexOf","length"],"mappings":"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","sourcesContent":["import cookie from 'js-cookie';\n\n// set in cookie\nexport const setCookie = (key, value) => {\n    if (window !== 'undefined') {\n        cookie.set(key, value, {\n            expires: 1\n        });\n    }\n};\n// remove from cookie\nexport const removeCookie = key => {\n    if (window !== 'undefined') {\n        cookie.remove(key, {\n            expires: 1\n        });\n    }\n};\n// get from cookie such as stored token\n// will be useful when we need to make request to server with token\nexport const getCookie = key => {\n    if (window !== 'undefined') {\n        return cookie.get(key);\n    }\n};\n// set in localstorage\nexport const setLocalStorage = (key, value) => {\n    if (window !== 'undefined') {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n};\n// remove from localstorage\nexport const removeLocalStorage = key => {\n    if (window !== 'undefined') {\n        localStorage.removeItem(key);\n    }\n};\n// authenticate user by passing data to cookie and localstorage during signin\nexport const authenticate = (response, next) => {\n    console.log('AUTHENTICATE HELPER ON SIGNIN RESPONSE', response);\n    setCookie('token', response.data.token);\n    setLocalStorage('user', response.data.user);\n    next();\n};\n// access user info from localstorage\nexport const isAuth = () => {\n    if (window !== 'undefined') {\n        const cookieChecked = getCookie('token');\n        if (cookieChecked) {\n            if (localStorage.getItem('user')) {\n                return JSON.parse(localStorage.getItem('user'));\n            } else {\n                return false;\n            }\n        }\n    }\n};\nexport const signout = next => {\n    removeCookie('token');\n    removeLocalStorage('user');\n    next();\n};\nexport const checkValidEmail = (email) => {\n    // eslint-disable-next-line\n    const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n    return validEmailRegex.test(email);\n  };\n  export const checkValidPassword = (password) => {\n    const validPassRegex = RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm);\n    return validPassRegex.test(password);\n    \n  };\n  export const validateSubscription = (email,password) => {\n  \n    const msg = {\n      email_msg: '',\n      pass_msg: '',\n    };\n    if (email) {\n      if (!checkValidEmail(email)) {\n        msg.email_msg = 'INVALID_EMAIL';\n      } if(!checkValidPassword(password)) {\n        msg.pass_msg = 'INVALID_PASSWORD';\n      }\n    } else {\n      msg.email_msg = 'EMAIL_MANDATORY';\n    }\n    if (msg.email_msg === '') {\n      if (email.substring(email.lastIndexOf('.')).length > 11) {\n        msg.email_msg = 'INVALID_EMAIL';\n      }\n    }\n    console.log(\"password msg\",msg)\n    return msg;\n  };\n//   export const validatePassword = (password) => {\n//     const msg = {\n//       pass_msg: '',\n//     };\n//     if (password) {\n//       if (!checkValidPassword(password)) {\n//         msg.pass_msg = 'INVALID_PASSWORD';\n//       } \n//     } else {\n//       msg.pass_msg = 'PASSSWORD_MANDATORY';\n//     }\n  \n//     return msg;\n//   };"]},"metadata":{},"sourceType":"module"}