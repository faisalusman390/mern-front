{"ast":null,"code":"var _jsxFileName = \"/home/faisal/Desktop/mern-front/src/components/common/Smart/AdminRoute.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuth } from '../../../helpers/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => isAuth() && isAuth().role === 'admin' ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: '/signin',\n      state: {\n        from: props.location\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 17\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 5\n}, this);\n\n_c = AdminRoute;\nexport default AdminRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"sources":["/home/faisal/Desktop/mern-front/src/components/common/Smart/AdminRoute.js"],"names":["React","Component","Route","Redirect","isAuth","AdminRoute","component","rest","props","role","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,MAAT,QAAuB,0BAAvB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEL,SAAb;AAAwB,KAAGM;AAA3B,CAAD,kBACf,QAAC,KAAD,OACQA,IADR;AAEI,EAAA,MAAM,EAAEC,KAAK,IACTJ,MAAM,MAAMA,MAAM,GAAGK,IAAT,KAAkB,OAA9B,gBACI,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ,gBAGI,QAAC,QAAD;AACI,IAAA,EAAE,EAAE;AACAE,MAAAA,QAAQ,EAAE,SADV;AAEAC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAFP;AADR;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMR,U;AAkBN,eAAeA,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuth } from '../../../helpers/helpers';\n\nconst AdminRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuth() && isAuth().role === 'admin' ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: '/signin',\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    ></Route>\n);\n\nexport default AdminRoute;"]},"metadata":{},"sourceType":"module"}