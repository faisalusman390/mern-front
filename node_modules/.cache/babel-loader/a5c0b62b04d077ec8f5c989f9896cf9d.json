{"ast":null,"code":"var _jsxFileName = \"/home/faisal/Desktop/mern-front/src/components/common/Smart/Reset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport jwt from 'jsonwebtoken';\nimport Layout from '../../Layouts/Layout';\nimport { Link, withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { resetuser, resettoken } from '../../../services/API';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reset = ({\n  match,\n  history\n}) => {\n  _s();\n\n  // props.match from react router dom\n  const [values, setValues] = useState({\n    name: '',\n    token: '',\n    newPassword: '',\n    buttonText: 'Reset password'\n  });\n  useEffect(() => {\n    // debugger\n    let token = match.params.token; // let { name } = jwt.decode(token); \n\n    console.log(\"i am name\", name); // console.log(name);\n\n    if (token) {\n      setValues({ ...values,\n        name,\n        token\n      });\n    }\n  }, []);\n  useEffect(() => {\n    let token = match.params.token;\n    resettoken(token).then(respones => {\n      console.log(\"reset token respones\", respones);\n    }).catch(error => {\n      console.log(\"token error\", error);\n      history.push('/resettoken'); // history.push('/signin');\n    });\n  });\n  const {\n    name,\n    token,\n    newPassword,\n    buttonText\n  } = values;\n\n  const handleChange = event => {\n    setValues({ ...values,\n      newPassword: event.target.value\n    });\n  };\n\n  const clickSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      buttonText: 'Submitting'\n    });\n    resetuser(newPassword, token).then(response => {\n      console.log('RESET PASSWORD SUCCESS', response);\n      toast.success(response.data.message);\n      setValues({ ...values,\n        buttonText: 'Done'\n      });\n    }).catch(error => {\n      console.log('RESET PASSWORD ERROR', error.response.data);\n      toast.error(error.response.data.error);\n      setValues({ ...values,\n        buttonText: 'Reset password'\n      });\n    });\n  };\n\n  const passwordResetForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-muted\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: newPassword,\n        type: \"password\",\n        className: \"form-control\",\n        placeholder: \"Type new password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: clickSubmit,\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"p-5 text-center\",\n        children: [\"Hey \", name, \",Type your new password\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), passwordResetForm()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reset, \"8RO/z3gn1mIqjGD70AOgEPSvdJw=\");\n\n_c = Reset;\nexport default Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["/home/faisal/Desktop/mern-front/src/components/common/Smart/Reset.js"],"names":["React","useState","useEffect","jwt","Layout","Link","withRouter","axios","ToastContainer","toast","resetuser","resettoken","Reset","match","history","values","setValues","name","token","newPassword","buttonText","params","console","log","then","respones","catch","error","push","handleChange","event","target","value","clickSubmit","preventDefault","response","success","data","message","passwordResetForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport jwt from 'jsonwebtoken';\nimport Layout from '../../Layouts/Layout';\nimport { Link, withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { resetuser,resettoken} from '../../../services/API'\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst Reset = ({ match, history }) => {\n    // props.match from react router dom\n    const [values, setValues] = useState({\n        name: '',\n        token: '',\n        newPassword: '',\n        buttonText: 'Reset password'\n    });\n\n    useEffect(() => {\n        // debugger\n        let token = match.params.token;\n        // let { name } = jwt.decode(token); \n        console.log(\"i am name\", name)\n        // console.log(name);\n        if (token) {\n            setValues({ ...values, name, token });\n        }\n    }, []);\n    useEffect(() => {\n        let token = match.params.token;\n        resettoken(token).then(respones => {\n            console.log(\"reset token respones\", respones)\n\n        }).catch(error => {\n            console.log(\"token error\",error)\n                history.push('/resettoken');\n            // history.push('/signin');\n        })\n        \n      });\n\n    const { name, token, newPassword, buttonText } = values;\n\n    const handleChange = event => {\n        setValues({ ...values, newPassword: event.target.value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, buttonText: 'Submitting' });\n            resetuser(newPassword,token).then(response => {\n                console.log('RESET PASSWORD SUCCESS', response);\n                toast.success(response.data.message);\n                setValues({ ...values, buttonText: 'Done' });\n            })\n            .catch(error => {\n                console.log('RESET PASSWORD ERROR', error.response.data);\n                toast.error(error.response.data.error);\n                setValues({ ...values, buttonText: 'Reset password' });\n            });\n    };\n\n    const passwordResetForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input\n                    onChange={handleChange}\n                    value={newPassword}\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Type new password\"\n                    required\n                />\n            </div>\n\n            <div>\n                <button className=\"btn btn-primary\" onClick={clickSubmit}>\n                    {buttonText}\n                </button>\n            </div>\n        </form>\n    );\n\n    return (\n        <Layout>\n            <div className=\"col-md-6 offset-md-3\">\n                <ToastContainer />\n                <h1 className=\"p-5 text-center\">Hey {name},Type your new password</h1>\n                {passwordResetForm()}\n            </div>\n        </Layout>\n    );\n};\n\nexport default Reset;"]},"metadata":{},"sourceType":"module"}